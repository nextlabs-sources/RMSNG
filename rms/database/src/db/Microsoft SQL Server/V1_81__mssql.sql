ALTER TABLE rms.membership DROP CONSTRAINT FK_MEMBERSHIP_PROJECT;
ALTER TABLE rms.membership ADD CONSTRAINT FK_MEMBERSHIP_PROJECT FOREIGN KEY (project_id) REFERENCES rms.project (id);
ALTER TABLE rms.membership DROP CONSTRAINT FK_MEMBERSHIP_TENANT;
ALTER TABLE rms.membership ADD CONSTRAINT FK_MEMBERSHIP_TENANT FOREIGN KEY (tenant_id) REFERENCES rms.tenant (id);
GO

ALTER TABLE rms.policy_component DROP CONSTRAINT fk_policy_component_tenant;
ALTER TABLE rms.policy_component ADD CONSTRAINT fk_policy_component_tenant FOREIGN KEY (tenant_id) REFERENCES rms.tenant (id);
GO

ALTER TABLE rms.project DROP CONSTRAINT FK_PROJECT_TENANT;
ALTER TABLE rms.project  WITH CHECK ADD  CONSTRAINT FK_PROJECT_TENANT FOREIGN KEY(parent_tenant_id) REFERENCES rms.tenant (id);
GO

ALTER TABLE rms.tenant DROP CONSTRAINT fk_tenant_keystore
ALTER TABLE rms.tenant  WITH CHECK ADD  CONSTRAINT fk_tenant_keystore FOREIGN KEY(keystore_id) REFERENCES rms.key_store_entry (id)
GO

CREATE TRIGGER rms.TRG_PROJECT
ON rms.project
INSTEAD OF DELETE
AS BEGIN 
DECLARE @PROJECTID INT;
SELECT @PROJECTID = DELETED.ID FROM DELETED;
DELETE FROM RMS.MEMBERSHIP WHERE PROJECT_ID = @PROJECTID;
DELETE FROM RMS.CLASSIFICATION WHERE PROJECT_ID = @PROJECTID;
DELETE FROM RMS.POLICY_COMPONENT WHERE PROJECT_ID = @PROJECTID;
DELETE FROM RMS.project_tag where PROJECT_ID =  @PROJECTID;
DELETE FROM RMS.project WHERE ID = @PROJECTID;
END

GO

ALTER TABLE rms.project ENABLE TRIGGER TRG_PROJECT
GO


CREATE TRIGGER rms.TRG_TENANT
ON rms.tenant
INSTEAD OF DELETE
AS BEGIN 
DECLARE @TENANTID nvarchar(36);
SELECT @TENANTID = DELETED.ID FROM DELETED;
DELETE FROM RMS.project WHERE parent_tenant_id = @TENANTID;
DELETE FROM RMS.MEMBERSHIP WHERE tenant_id = @TENANTID;
DELETE FROM RMS.CLASSIFICATION WHERE tenant_id = @TENANTID;
DELETE FROM RMS.POLICY_COMPONENT WHERE tenant_id = @TENANTID;
DELETE FROM RMS.tenant WHERE id = @TENANTID;
END
GO

ALTER TABLE rms.tenant ENABLE TRIGGER TRG_TENANT
GO